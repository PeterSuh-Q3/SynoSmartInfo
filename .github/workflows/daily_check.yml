name: Daily Check for Scriptversion Update

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # 매일 자정 UTC 기준 실행

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest release tag from PeterSuh-Q3/SynoSmartInfo
        id: get_latest_tag
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/PeterSuh-Q3/SynoSmartInfo/releases/latest | jq -r .tag_name)
          echo "Latest tag: $latest_tag"
          major=$(echo $latest_tag | cut -d. -f1 | tr -d 'v')
          minor=$(echo $latest_tag | cut -d. -f2)
          patch=$(echo $latest_tag | cut -d. -f3)
          if [ "$patch" -lt 9 ]; then
            patch=$((patch + 1))
          else
            patch=0
            minor=$((minor + 1))
          fi
          new_tag="v${major}.${minor}.${patch}"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Get latest release tag from 007revad/Synology_SMART_info
        id: get_tag
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/007revad/Synology_SMART_info/releases/latest | jq -r .tag_name)
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Get current scriptversion from package.json
        id: get_scriptversion
        run: |
          current_version=$(jq -r '.scriptversion' script.json)
          echo "current_version=$current_version" >> $GITHUB_OUTPUT

      - name: Compare versions and trigger SynoSmartInfo.yml if different
        run: |
          if [ "${{ steps.get_tag.outputs.latest_tag }}" != "${{ steps.get_scriptversion.outputs.current_version }}" ]; then
            echo "Update scriptversion in script.json,package.json"
            jq --arg tag "${{ steps.get_tag.outputs.latest_tag }}" '.scriptversion = $tag' script.json > tmp.json && mv tmp.json script.json            
            if ! git diff --cached --quiet; then
              git commit -m "Update scriptversion to ${{ steps.get_tag.outputs.latest_tag }}"
              jq --arg newtag "${{ steps.get_latest_tag.outputs.new_tag }}" '.version = ($newtag | sub("^v"; ""))' package.json > tmp.json && mv tmp.json package.json
              git commit -m "Update scriptversion to ${{ steps.get_latest_tag.outputs.new_tag }}"              
              git push
            else
              echo "No changes to commit."
            fi
            echo "Version mismatch detected. Triggering SynoSmartInfo.yml workflow..."
            #gh workflow run SynoSmartInfo.yml
          else
            echo "Versions match. No action needed."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
